{% extends 'patemp.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .container {
            margin-top: 30px;
        }
        .form-label {
            font-weight: bold;
        }
        .card {
            margin-bottom: 20px;
        }
        .chart-container {
            margin-top: 30px;
        }
        .chart-container canvas {
            width: 100% !important;
            height: 150px !important;
        }
        .stats-header {
            color: #333;
            font-size: 1.5rem;
            font-weight: bold;
        }
        #loading {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1000;
        }
    </style>
{% endblock %}

{% block body %}


<div class="container">
    <h2 class="text-center mb-4">Tableau de Bord des Statistiques Médicales</h2>

    <div class="row mb-4">
        <div class="col-md-6">
            <label for="specialite" class="form-label">Spécialité</label>
            <select id="specialite" class="form-select">
                <option value="">-- Sélectionner une spécialité --</option>
                {% for specialite in specialites %}
                    <option value="{{ specialite.specialite }}" {{ specialite.specialite == selectedSpecialite ? 'selected' : '' }}>
                        {{ specialite.specialite }}
                    </option>
                {% endfor %}
            </select>
        </div>
        <div class="col-md-6">
            <label for="medecin" class="form-label">Médecin</label>
            <select id="medecin" class="form-select">
                <option value="">-- Sélectionner un médecin --</option>
                {% if medecins %}
                    {% for medecin in medecins %}
                        <option value="{{ medecin.id }}" {{ medecin.id == selectedMedecin ? 'selected' : '' }}>
                            {{ medecin.nom }} {{ medecin.prenom }}
                        </option>
                    {% endfor %}
                {% endif %}
            </select>
        </div>
    </div>

    <div id="stats-container"></div>
    <div id="loading" class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>


{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
let chartSexe, chartAge, chartJour;

function showLoading(show) {
    document.getElementById('loading').style.display = show ? 'block' : 'none';
}

async function loadMedecins(specialite) {
    showLoading(true);
    try {
        const response = await fetch(`/api/medecins?specialite=${encodeURIComponent(specialite)}`);
        const medecins = await response.json();
        
        const select = document.getElementById('medecin');
        select.innerHTML = '<option value="">-- Sélectionner un médecin --</option>';
        medecins.forEach(medecin => {
            const option = new Option(medecin.nomComplet, medecin.id);
            select.add(option);
        });
    } catch (error) {
        console.error('Erreur de chargement des médecins:', error);
    } finally {
        showLoading(false);
    }
}

async function loadStats(medecinId) {
    showLoading(true);
    try {
        const response = await fetch(`/api/stats/${medecinId}`);
        const stats = await response.json();
        updateStatsDisplay(stats);
        updateCharts(stats);
    } catch (error) {
        console.error('Erreur de chargement des stats:', error);
    } finally {
        showLoading(false);
    }
}

function updateStatsDisplay(stats) {
    const container = document.getElementById('stats-container');
    container.innerHTML = `
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Statistiques du médecin ${stats.medecin.nom} ${stats.medecin.prenom}</h4>
                        <p><strong>Rendez-vous approuvés :</strong> ${stats.pourcentageApprouves}%</p>
                        <p><strong>Rendez-vous annulés :</strong> ${stats.pourcentageAnnules}%</p>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card chart-container">
                            <div class="card-body">
                                <h5>Répartition par sexe</h5>
                                <canvas id="statistiquesSexe"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card chart-container">
                            <div class="card-body">
                                <h5>Répartition par âge</h5>
                                <canvas id="statistiquesAge"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card chart-container">
                            <div class="card-body">
                                <h5>Répartition par jours</h5>
                                <canvas id="jourSemaineChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;
}

function updateCharts(stats) {
    if (chartSexe) chartSexe.destroy();
    if (chartAge) chartAge.destroy();
    if (chartJour) chartJour.destroy();

    // Chart Sexe
    const ctxSexe = document.getElementById('statistiquesSexe').getContext('2d');
    chartSexe = new Chart(ctxSexe, {
        type: 'pie',
        data: {
            labels: ['Homme', 'Femme'],
            datasets: [{
                data: [stats.pourcentageHomme, stats.pourcentageFemme],
                backgroundColor: ['#36a2eb', '#ff6384']
            }]
        },
        options: {
            responsive: true,
            plugins: {
                tooltip: {
                    callbacks: {
                        label: (ctx) => `${ctx.label}: ${ctx.raw.toFixed(2)}%`
                    }
                }
            }
        }
    });

    // Chart Age
    const ctxAge = document.getElementById('statistiquesAge').getContext('2d');
    chartAge = new Chart(ctxAge, {
        type: 'bar',
        data: {
            labels: ['0-18', '19-35', '36-50', '51-70', '71+'],
            datasets: [{
                label: '% des rendez-vous',
                data: Object.values(stats.statistiquesAge),
                backgroundColor: '#42a5f5'
            }]
        },
        options: {
            scales: {
                y: {
                    ticks: { callback: (value) => `${value}%` },
                    min: 0,
                    max: 100
                }
            }
        }
    });

    // Chart Jours
    const ctxJour = document.getElementById('jourSemaineChart').getContext('2d');
    chartJour = new Chart(ctxJour, {
        type: 'bar',
        data: {
            labels: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],
            datasets: [{
                label: 'Nombre de rendez-vous',
                data: stats.rendezVousParJour,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        }
    });
}

// Event Listeners
document.getElementById('specialite').addEventListener('change', function() {
    if (this.value) {
        loadMedecins(this.value);
        document.getElementById('medecin').value = '';
        document.getElementById('stats-container').innerHTML = '';
    }
});

document.getElementById('medecin').addEventListener('change', function() {
    if (this.value) loadStats(this.value);
});

// Initialisation
document.addEventListener('DOMContentLoaded', () => {
    const initialMedecin = document.getElementById('medecin').value;
    if (initialMedecin) loadStats(initialMedecin);
});
</script>
{% endblock %}