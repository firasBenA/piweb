{# templates/rendez_vous/listrdv.html.twig #}

{% extends 'patemp.html.twig' %}

{% block title %}Liste de Rendez-vous{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1 class="text-center text-primary fw-bold">ðŸ“… Liste des Rendez-vous de {{ user.nom }} {{ user.prenom }}</h1>

        <!-- Barre de recherche -->
        <div class="row mb-4">
            <div class="col-md-6 offset-md-3">
                <form id="searchForm" class="input-group">
                    <input type="text" id="searchInput" name="search" class="form-control" placeholder="Rechercher par nom ou prÃ©nom du mÃ©decin..." value="{{ search }}">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i> Rechercher
                    </button>
                </form>
            </div>
        </div>

        {# Inclure le template partiel pour la table et la pagination #}
        <div id="rdv-table">
            {{ include('rendez_vous/_table.html.twig') }}
        </div>

        <div class="text-center mt-4">
            <a href="{{ path('addrendezvous') }}" class="btn btn-success btn-lg shadow px-5 py-2 fw-bold">
                âž• RÃ©server un Nouveau Rendez-vous
            </a>
            <a href="{{ path('patient_dashboard1') }}" class="btn btn-secondary btn-lg shadow px-5 py-2 ml-2">
                Dashboard
            </a>
        </div>
    </div>

    <style>
        body {
            background-color: #f0f8ff;
            font-family: 'Poppins', sans-serif;
        }
        .table {
            border-radius: 12px;
            overflow: hidden;
        }
        .table thead {
            background-color: #343a40;
            color: white;
        }
        .table tbody tr:hover {
            background-color: #e3f2fd;
            transition: 0.3s ease-in-out;
        }
        .btn {
            transition: all 0.3s ease-in-out;
        }
        .btn:hover {
            transform: scale(1.05);
        }
        .badge {
            font-size: 14px;
            padding: 8px 12px;
            border-radius: 8px;
        }
        .pagination {
            margin: 20px 0;
        }
        .page-item.active .page-link {
            background-color: #343a40;
            border-color: #343a40;
        }
        .page-link {
            color: #343a40;
        }
        .page-link:hover {
            color: #0056b3;
        }
    </style>

    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchForm = document.getElementById('searchForm');
        const searchInput = document.getElementById('searchInput');

        // GÃ©rer la soumission du formulaire de recherche
        searchForm.addEventListener('submit', function (e) {
            e.preventDefault(); // EmpÃªcher le rechargement de la page

            const searchTerm = searchInput.value;
            fetch(`{{ path('listrdv') }}?search=${searchTerm}`, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest' // Indiquer que c'est une requÃªte AJAX
                }
            })
            .then(response => response.text())
            .then(html => {
                // Remplacer le contenu de la table et de la pagination
                document.getElementById('rdv-table').innerHTML = html;

                // RÃ©attacher les Ã©vÃ©nements aux nouveaux liens de pagination
                attachPaginationEvents();
            })
            .catch(error => console.error('Erreur lors de la recherche :', error));
        });

        // GÃ©rer la pagination
        function attachPaginationEvents() {
            const paginationLinks = document.querySelectorAll('.pagination a.page-link');

            paginationLinks.forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault(); // EmpÃªcher le comportement par dÃ©faut du lien

                    const page = this.getAttribute('data-page'); // RÃ©cupÃ©rer le numÃ©ro de page
                    if (!page) return;

                    const searchTerm = searchInput.value;

                    // Faire une requÃªte AJAX
                    fetch(`{{ path('listrdv') }}?page=${page}&search=${searchTerm}`, {
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.text())
                    .then(html => {
                        // Remplacer le contenu de la table et de la pagination
                        document.getElementById('rdv-table').innerHTML = html;

                        // RÃ©attacher les Ã©vÃ©nements aux nouveaux liens de pagination
                        attachPaginationEvents();
                    })
                    .catch(error => console.error('Erreur lors du chargement de la page :', error));
                });
            });
        }

        // Attacher les Ã©vÃ©nements de pagination au chargement initial
        attachPaginationEvents();
    });
    </script>
{% endblock %}